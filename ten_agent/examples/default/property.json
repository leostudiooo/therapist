{
  "ten": {
    "predefined_graphs": [
      {
        "name": "voice_assistant",
        "auto_start": false,
        "graph": {
          "nodes": [
            {
              "type": "extension",
              "name": "agora_rtc",
              "addon": "agora_rtc",
              "extension_group": "default",
              "property": {
                "app_id": "${env:AGORA_APP_ID}",
                "app_certificate": "${env:AGORA_APP_CERTIFICATE|}",
                "channel": "ten_agent_test",
                "stream_id": 1234,
                "remote_stream_id": 123,
                "subscribe_audio": true,
                "publish_audio": true,
                "publish_data": true,
                "enable_agora_asr": false,
                "agora_asr_vendor_name": "microsoft",
                "agora_asr_language": "en-US",
                "agora_asr_vendor_key": "${env:AZURE_STT_KEY|}",
                "agora_asr_vendor_region": "${env:AZURE_STT_REGION|}",
                "agora_asr_session_control_file_path": "session_control.conf"
              }
            },
            {
              "type": "extension",
              "name": "stt",
              "addon": "deepgram_asr_python",
              "extension_group": "stt",
              "property": {
                "api_key": "${env:DEEPGRAM_API_KEY}",
                "language": "en-US",
                "model": "nova-3",
                "sample_rate": 16000
              }
            },
            {
              "type": "extension",
              "name": "llm",
              "addon": "openai_chatgpt_python",
              "extension_group": "chatgpt",
              "property": {
                "api_key": "${env:OPENAI_API_KEY}",
                "base_url": "",
                "frequency_penalty": 0.9,
                "greeting": "TEN Agent connected. How can I help you today?",
                "max_memory_length": 10,
                "max_tokens": 512,
                "model": "${env:OPENAI_MODEL}",
                "prompt": "",
                "proxy_url": "${env:OPENAI_PROXY_URL}"
              }
            },
            {
              "type": "extension",
              "name": "tts",
              "addon": "fish_audio_tts",
              "extension_group": "tts",
              "property": {
                "api_key": "${env:FISH_AUDIO_TTS_KEY}",
                "model_id": "d8639b5cc95548f5afbcfe22d3ba5ce5",
                "optimize_streaming_latency": true,
                "request_timeout_seconds": 30,
                "base_url": "https://api.fish.audio"
              }
            },
            {
              "type": "extension",
              "name": "interrupt_detector",
              "addon": "interrupt_detector_python",
              "extension_group": "default",
              "property": {}
            },
            {
              "type": "extension",
              "name": "message_collector",
              "addon": "message_collector",
              "extension_group": "transcriber",
              "property": {}
            },
            {
              "type": "extension",
              "name": "weatherapi_tool_python",
              "addon": "weatherapi_tool_python",
              "extension_group": "default",
              "property": {
                "api_key": "${env:WEATHERAPI_API_KEY|}"
              }
            },
            {
              "type": "extension",
              "name": "adapter",
              "addon": "data_adapter_python",
              "extension_group": "default"
            },
            {
              "type": "extension",
              "name": "streamid_adapter",
              "addon": "streamid_adapter"
            }
          ],
          "connections": [
            {
              "extension": "agora_rtc",
              "cmd": [
                {
                  "name": "on_user_joined",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                },
                {
                  "name": "on_user_left",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                },
                {
                  "name": "on_connection_failure",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "streamid_adapter"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "llm",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "tts"
                    }
                  ]
                },
                {
                  "name": "tool_call",
                  "dest": [
                    {
                      "extension": "weatherapi_tool_python"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "tts"
                    },
                    {
                      "extension": "message_collector"
                    }
                  ]
                },
                {
                  "name": "content_data",
                  "dest": [
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "message_collector",
              "data": [
                {
                  "name": "data",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "tts",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "interrupt_detector",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "weatherapi_tool_python",
              "cmd": [
                {
                  "name": "tool_register",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "stt",
              "data": [
                {
                  "name": "asr_result",
                  "dest": [
                    {
                      "extension": "adapter"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "adapter",
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "interrupt_detector"
                    },
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "streamid_adapter",
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "stt"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "name": "voice_assistant_realtime",
        "auto_start": true,
        "graph": {
          "nodes": [
            {
              "type": "extension",
              "name": "agora_rtc",
              "addon": "agora_rtc",
              "extension_group": "rtc",
              "property": {
                "app_id": "${env:AGORA_APP_ID}",
                "app_certificate": "${env:AGORA_APP_CERTIFICATE|}",
                "channel": "ten_agent_test",
                "stream_id": 1234,
                "remote_stream_id": 123,
                "subscribe_audio": true,
                "publish_audio": true,
                "publish_data": true,
                "subscribe_audio_sample_rate": 24000
              }
            },
            {
              "type": "extension",
              "name": "v2v",
              "addon": "azure_v2v_python",
              "extension_group": "llm",
              "property": {
                "max_tokens": 2048,
                "base_uri": "${env:AZURE_AI_FOUNDRY_BASE_URI}",
                "api_key": "${env:AZURE_AI_FOUNDRY_API_KEY}",
                "temperature": 0.9,
                "server_vad": true,
                "language": "en-US",
                "model": "gpt-4o",
                "enable_storage": false,
                "prompt": "You are a therapeutic AI assistant with real-time access to the user's emotional state through their EEG headset. Use this emotional context to provide empathetic, supportive responses. {emotion_context}\n\nAdapt your communication style based on the user's current emotional state:\n- If they're stressed: Use calming language and suggest relaxation techniques\n- If they're disengaged: Ask engaging questions or suggest interesting topics\n- If they're excited: Match their energy while maintaining therapeutic focus\n- If they're relaxed: Continue supportive conversation at their pace\n\nAlways prioritize the user's emotional well-being and provide appropriate therapeutic support."
              }
            },
            {
              "type": "extension",
              "name": "message_collector",
              "addon": "message_collector",
              "extension_group": "transcriber",
              "property": {}
            },
            {
              "type": "extension",
              "name": "weatherapi_tool_python",
              "addon": "weatherapi_tool_python",
              "extension_group": "default",
              "property": {
                "api_key": "${env:WEATHERAPI_API_KEY|}"
              }
            },
            {
              "type": "extension",
              "name": "emotion_bridge",
              "addon": "emotion_bridge_python",
              "extension_group": "emotion",
              "property": {
                "websocket_url": "ws://localhost:8765",
                "reconnect_interval": 5.0,
                "emotion_threshold": 0.5,
                "enable_stale_filter": true,
                "max_reconnect_attempts": 10
              }
            }
          ],
          "connections": [
            {
              "extension": "agora_rtc",
              "cmd": [
                {
                  "name": "on_user_joined",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                },
                {
                  "name": "on_user_left",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                },
                {
                  "name": "on_connection_failure",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ],
              "video_frame": [
                {
                  "name": "video_frame",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "v2v",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                },
                {
                  "name": "tool_call",
                  "dest": [
                    {
                      "extension": "weatherapi_tool_python"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "message_collector",
              "data": [
                {
                  "name": "data",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "weatherapi_tool_python",
              "cmd": [
                {
                  "name": "tool_register",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "emotion_bridge",
              "data": [
                {
                  "name": "emotion_context",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "name": "story_teller",
        "auto_start": false,
        "graph": {
          "nodes": [
            {
              "type": "extension",
              "name": "agora_rtc",
              "addon": "agora_rtc",
              "extension_group": "default",
              "property": {
                "app_id": "${env:AGORA_APP_ID}",
                "app_certificate": "${env:AGORA_APP_CERTIFICATE|}",
                "channel": "ten_agent_test",
                "stream_id": 1234,
                "remote_stream_id": 123,
                "subscribe_audio": true,
                "publish_audio": true,
                "publish_data": true,
                "enable_agora_asr": false
              }
            },
            {
              "type": "extension",
              "name": "stt",
              "addon": "deepgram_asr_python",
              "extension_group": "stt",
              "property": {
                "api_key": "${env:DEEPGRAM_API_KEY}",
                "language": "en-US",
                "model": "nova-2",
                "sample_rate": 16000
              }
            },
            {
              "type": "extension",
              "name": "llm",
              "addon": "openai_chatgpt_python",
              "extension_group": "chatgpt",
              "property": {
                "api_key": "${env:OPENAI_API_KEY}",
                "base_url": "",
                "frequency_penalty": 0.9,
                "greeting": "TEN Agent connected. How can I help you today?",
                "max_memory_length": 10,
                "max_tokens": 512,
                "model": "${env:OPENAI_MODEL}",
                "prompt": "You are an ai agent bot producing child picture books. Each response should be short and no more than 50 words as it's for child. \nFor every response relevant to the story-telling, you will use the 'image_generate' tool to create an image based on the description or key moment in that part of the story. \n The story should be set in a fantasy world. Try asking questions relevant to the story to decide how the story should proceed. Every response should include rich, vivid descriptions that will guide the 'image_generate' tool to produce an image that aligns with the scene or mood.\n Whether it’s the setting, a character’s expression, or a dramatic moment, the paragraph should give enough detail for a meaningful visual representation.",
                "proxy_url": "${env:OPENAI_PROXY_URL}"
              }
            },
            {
              "type": "extension",
              "name": "tts",
              "addon": "fish_audio_tts",
              "extension_group": "tts",
              "property": {
                "api_key": "${env:FISH_AUDIO_TTS_KEY}",
                "model_id": "d8639b5cc95548f5afbcfe22d3ba5ce5",
                "optimize_streaming_latency": true,
                "request_timeout_seconds": 30,
                "base_url": "https://api.fish.audio"
              }
            },
            {
              "type": "extension",
              "name": "interrupt_detector",
              "addon": "interrupt_detector_python",
              "extension_group": "default",
              "property": {}
            },
            {
              "type": "extension",
              "name": "message_collector",
              "addon": "message_collector",
              "extension_group": "transcriber",
              "property": {}
            },
            {
              "type": "extension",
              "name": "openai_image_generate_tool",
              "addon": "openai_image_generate_tool",
              "extension_group": "default",
              "property": {
                "api_key": "${env:OPENAI_API_KEY}"
              }
            },
            {
              "type": "extension",
              "name": "adapter",
              "extension_group": "default",
              "addon": "data_adapter_python"
            },
            {
              "type": "extension",
              "name": "streamid_adapter",
              "addon": "streamid_adapter"
            }
          ],
          "connections": [
            {
              "extension": "agora_rtc",
              "cmd": [
                {
                  "name": "on_user_joined",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                },
                {
                  "name": "on_user_left",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                },
                {
                  "name": "on_connection_failure",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "streamid_adapter"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "stt",
              "data": [
                {
                  "name": "asr_result",
                  "dest": [
                    {
                      "extension": "adapter"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "adapter",
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "interrupt_detector"
                    },
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "streamid_adapter",
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "stt"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "llm",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "tts"
                    }
                  ]
                },
                {
                  "name": "tool_call",
                  "dest": [
                    {
                      "extension": "openai_image_generate_tool"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "tts"
                    },
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "message_collector",
              "data": [
                {
                  "name": "data",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "tts",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "interrupt_detector",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "openai_image_generate_tool",
              "cmd": [
                {
                  "name": "tool_register",
                  "dest": [
                    {
                      "extension": "llm"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "content_data",
                  "dest": [
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "name": "story_teller_realtime",
        "auto_start": false,
        "graph": {
          "nodes": [
            {
              "type": "extension",
              "name": "agora_rtc",
              "addon": "agora_rtc",
              "extension_group": "rtc",
              "property": {
                "app_id": "${env:AGORA_APP_ID}",
                "app_certificate": "${env:AGORA_APP_CERTIFICATE|}",
                "channel": "ten_agent_test",
                "stream_id": 1234,
                "remote_stream_id": 123,
                "subscribe_audio": true,
                "publish_audio": true,
                "publish_data": true,
                "subscribe_audio_sample_rate": 24000
              }
            },
            {
              "type": "extension",
              "name": "v2v",
              "addon": "openai_v2v_python",
              "extension_group": "llm",
              "property": {
                "api_key": "${env:OPENAI_REALTIME_API_KEY}",
                "temperature": 0.9,
                "model": "gpt-4o-realtime-preview-2024-12-17",
                "max_tokens": 2048,
                "voice": "alloy",
                "language": "en-US",
                "server_vad": true,
                "prompt": "You are an ai agent bot producing child picture books. Each response should be short and no more than 50 words as it's for child. \nFor every response relevant to the story-telling, you will use the 'image_generate' tool to create an image based on the description or key moment in that part of the story. \n The story should be set in a fantasy world. Try asking questions relevant to the story to decide how the story should proceed. Every response should include rich, vivid descriptions that will guide the 'image_generate' tool to produce an image that aligns with the scene or mood.\n Whether it’s the setting, a character’s expression, or a dramatic moment, the paragraph should give enough detail for a meaningful visual representation.",
                "dump": false,
                "max_history": 10
              }
            },
            {
              "type": "extension",
              "name": "message_collector",
              "addon": "message_collector",
              "extension_group": "transcriber",
              "property": {}
            },
            {
              "type": "extension",
              "name": "openai_image_generate_tool",
              "addon": "openai_image_generate_tool",
              "extension_group": "default",
              "property": {
                "api_key": "${env:OPENAI_API_KEY}"
              }
            }
          ],
          "connections": [
            {
              "extension": "agora_rtc",
              "cmd": [
                {
                  "name": "on_user_joined",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                },
                {
                  "name": "on_user_left",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                },
                {
                  "name": "on_connection_failure",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "v2v",
              "cmd": [
                {
                  "name": "flush",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                },
                {
                  "name": "tool_call",
                  "dest": [
                    {
                      "extension": "openai_image_generate_tool"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "text_data",
                  "dest": [
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ],
              "audio_frame": [
                {
                  "name": "pcm_frame",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "message_collector",
              "data": [
                {
                  "name": "data",
                  "dest": [
                    {
                      "extension": "agora_rtc"
                    }
                  ]
                }
              ]
            },
            {
              "extension": "openai_image_generate_tool",
              "cmd": [
                {
                  "name": "tool_register",
                  "dest": [
                    {
                      "extension": "v2v"
                    }
                  ]
                }
              ],
              "data": [
                {
                  "name": "content_data",
                  "dest": [
                    {
                      "extension": "message_collector"
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    ],
    "log": {
      "level": 3
    }
  }
}